/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'java-library'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.36'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.1.3'
    testImplementation("org.testng:testng:7.3.0") {
        transitive = false
    }
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.22.0'
    implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '5.1.1'
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-grid', version: '4.1.3'
    implementation group: 'io.qameta.allure', name: 'allure-testng', version: '2.17.3'
    implementation group: 'io.cucumber', name: 'cucumber-java', version: '7.2.3'
    implementation group: 'io.cucumber', name: 'cucumber-testng', version: '7.2.3'
    testImplementation group: 'io.rest-assured', name: 'rest-assured', version: '5.0.1'
}

group = 'com.epam'
version = '1.0-SNAPSHOT'
description = 'Trello'
java.sourceCompatibility = JavaVersion.VERSION_11


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.named('test') {
    useTestNG()
}

/** TEST VARIATIONS
 * For example use command: ./gradle cards test
 * and only tests filtered by task "card" will run
 * **/

// Tests by packages (test suite lists)
task automation(type: Test) {
    maxParallelForks = 4
    include 'automation.*'
    systemProperties System.properties
    testLogging {
        events "PASSED", "STARTED", "FAILED", "SKIPPED"
    }
}
task boards(type: Test) {
    maxParallelForks = 4
    include 'boards.*'
    systemProperties System.properties
    testLogging {
        events "PASSED", "STARTED", "FAILED", "SKIPPED"
    }
}
task cards(type: Test) {
    maxParallelForks = 4
    include 'cards.*'
    systemProperties System.properties
    testLogging {
        events "PASSED", "STARTED", "FAILED", "SKIPPED"
    }
}
task login(type: Test) {
    maxParallelForks = 4
    include 'login.*'
    systemProperties System.properties
    testLogging {
        events "PASSED", "STARTED", "FAILED", "SKIPPED"
    }
}
task register(type: Test) {
    maxParallelForks = 4
    include 'register.*'
    systemProperties System.properties
    testLogging {
        events "PASSED", "STARTED", "FAILED", "SKIPPED"
    }
}
task settings(type: Test) {
    maxParallelForks = 4
    include 'settings.*'
    systemProperties System.properties
    testLogging {
        events "PASSED", "STARTED", "FAILED", "SKIPPED"
    }
}
task workspaces(type: Test) {
    maxParallelForks = 4
    include 'workspaces.*'
    systemProperties System.properties
    testLogging {
        events "PASSED", "STARTED", "FAILED", "SKIPPED"
    }
}

// Smoke test
task smoke(type: Test) {
    maxParallelForks = 4
    include 'login.LoginViaTrelloTest.*'
    include '*boardsCreationTest'
    include '*changeInformationAboutWorkspaceTest'
    include 'cards.header.*'
    include 'cards.fullscreen_card_mode.*'
    systemProperties System.properties
    testLogging {
        events "PASSED", "STARTED", "FAILED", "SKIPPED"
    }
}

// Runs all tests
task regression(type: Test) {
    maxParallelForks = 6
    include '*'
    systemProperties System.properties
    testLogging {
        events "PASSED", "STARTED", "FAILED", "SKIPPED"
    }
}